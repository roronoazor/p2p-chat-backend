// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int             @default(autoincrement()) @id
  email       String          @unique
  name        String
  phoneNumber String

  sentMessages    OfflineMessage[] @relation("SentMessages")
  receivedMessages OfflineMessage[] @relation("ReceivedMessages")

  blockedUsers    BlockedUser[]    @relation("UserBlocking")
  blockedByUsers  BlockedUser[]    @relation("UserBlocked")
 
}

model OfflineMessage {
  id        Int      @id @default(autoincrement())
  fromUserId Int
  toUserId  Int
  message   String
  timestamp DateTime @default(now())

  fromUser  User @relation("SentMessages", fields: [fromUserId], references: [id])
  toUser    User @relation("ReceivedMessages", fields: [toUserId], references: [id])
}

model BlockedUser {
  id            Int      @id @default(autoincrement())
  userId        Int
  blockedUserId Int
  createdAt     DateTime @default(now())

  user          User     @relation("UserBlocking", fields: [userId], references: [id])
  blockedUser   User     @relation("UserBlocked", fields: [blockedUserId], references: [id])

  @@unique([userId, blockedUserId])
}